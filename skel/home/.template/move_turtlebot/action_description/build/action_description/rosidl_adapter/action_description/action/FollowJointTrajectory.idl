// generated from rosidl_adapter/resource/action.idl.em
// with input from action_description/action/FollowJointTrajectory.action
// generated code does not contain a copyright notice

#include "trajectory_msgs/msg/JointTrajectory.idl"
#include "trajectory_msgs/msg/JointTrajectoryPoint.idl"

module action_description {
  module action {
    @verbatim (language="comment", text=
      " The joint trajectory to follow")
    struct FollowJointTrajectory_Goal {
      trajectory_msgs::msg::JointTrajectory trajectory;
    };
    module FollowJointTrajectory_Result_Constants {
      const int32 SUCCESSFUL = 0;
      const int32 INVALID_GOAL = -1;
      const int32 INVALID_JOINTS = -2;
      const int32 OLD_HEADER_TIMESTAMP = -3;
      const int32 PATH_TOLERANCE_VIOLATED = -4;
      const int32 GOAL_TOLERANCE_VIOLATED = -5;
    };
    struct FollowJointTrajectory_Result {
      int32 error_code;
    };
    struct FollowJointTrajectory_Feedback {
      sequence<string> joint_names;

      trajectory_msgs::msg::JointTrajectoryPoint desired;

      trajectory_msgs::msg::JointTrajectoryPoint actual;

      trajectory_msgs::msg::JointTrajectoryPoint error;
    };
  };
};
